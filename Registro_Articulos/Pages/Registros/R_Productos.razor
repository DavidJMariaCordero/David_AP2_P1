@page "/Productos"
@page "/Productos/{ProductoId:int}"

@inject IToastService toastService

    <EditForm Model="Producto" OnInvalidSubmit="Guardar">
        <DataAnnotationsValidator/>

        <div class="card-header">
            <h1>Registro de Productos</h1>
        </div>

        <div class="card-body">
            <form>

                <div class="form-group">
                    <label>ProductoID</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="Producto.ProductoId" class="form-control" />
                        <ValidationMessage For="@(() => Producto.ProductoId)" />
                        <div class="input-group-append">
                            <button type="button" class="btn btn-warning" @onclick="Buscar">
                                <i class="oi oi-magnifying-glass mr-1" />
                            </button>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label>Descripcion</label>
                    <div class="input-group">
                        <InputText @bind-Value="Producto.Descripcion" class="form-control" />
                        <ValidationMessage For="@(() => Producto.Descripcion)" />
                    </div>
                </div>

                <div class="form-group">
                    <label>Existencia</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="Producto.Existencia" class="form-control" />
                        <ValidationMessage For="@(() => Producto.Existencia)" />
                    </div>
                </div>

                <div class="form-group">
                    <label>Costo</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="Producto.Costo" class="form-control" />
                        <ValidationMessage For="@(() => Producto.Costo)" />
                    </div>
                </div>

                <div class="form-group">
                    <label>Valor Inventario</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="ValorInventario" class="form-control" readOnly="true"/>
                    </div>
                </div>

                <div class="card-footer">
                    <div class="form-group text-center" display: inline-block>

                        <button type="button" class="btn btn-primary" @onclick="Limpiar">
                            <i class="oi oi-file mr-1" />Limpiar
                        </button>

                        <button type="button" class="btn btn-success" @onclick="Guardar">
                            <i class="oi oi-account-login mr-1" style="transform:rotate(90deg)" />Guardar
                        </button>

                        <button type="button" class="btn btn-danger" @onclick="Eliminar">
                            <i class="oi oi-trash mr-1" />Eliminar
                        </button>

                    </div>
                </div>


            </form>
        </div>

    </EditForm>

@code {
    [Parameter]
    public int ProductoId { get; set; }

    private Productos Producto = new Productos();
    private double ValorInventario;

    protected override void OnInitialized()
    {
        Limpiar();
        Buscar();
    }

    private void Limpiar()
    {
        Producto = new Productos();
        ValorInventario = 0;
    }

    private void Buscar()
    {
        if (Producto.ProductoId > 0)
        {
            var encontrado = ProductosBLL.Buscar(Producto.ProductoId);

            if (encontrado != null)
            {
                this.Producto = encontrado;
                ValorInventario = this.Producto.Costo * this.Producto.Existencia;
            }
            else
                toastService.ShowWarning("No encontrado");
        }

    }


    private void Guardar()
    {
        bool guardo;
        guardo = ProductosBLL.Guardar(Producto);

        if (guardo)
        {
            Limpiar();
            toastService.ShowSuccess("Producto guardado con exito");
        }
        else
            toastService.ShowError("Error al guardar producto");
    }

    private void Eliminar()
    {
        bool elimino;

        elimino = ProductosBLL.Eliminar(Producto.ProductoId);

        if (elimino)
        {
            Limpiar();
            toastService.ShowSuccess("Producto eliminado con exito");
        }
        else
            toastService.ShowError("Error al eliminar producto");

    }

}
